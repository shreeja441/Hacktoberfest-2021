#include<bits/stdc++.h>
using namespace std;
#define MAX 1000

class Stack
{
	int top;
public:
	int arr[MAX];   // array made.

	Stack()  // default constructor
	{
		top = -1; // empty stack
	}
	bool push(int x);
	int pop();
	int peek();
	bool isEmpty();

};

bool Stack::push(int x)
{
	if(top >= (MAX - 1))
	{
		cout<<"Stack Overflow"<<endl;
		return false;
	}
	else
	{
		arr[++top] = x; // place item in arr top place.
		cout<<x<<"Pushed into stack"<<endl;
		return true;
	}
}

int Stack::pop()

{
	if(top < 0)
	{
		cout<<"Stack Underflow"<<endl;
		return 0;
	}
	else
	{
		int x = arr[top--];
		return x;
	}
}

int Stack:: peek()
{
	if(top < 0)
	{
		cout<<"Stack is Empty"<<endl;
		return 0;
	}
	else
	{
		int x = arr[top];
		return x;
	}
}

bool Stack::isEmpty()
{
	return (top < 0);
}

int main()
{
	class Stack s; // object created.

	s.push(10);
	s.push(20);
	s.push(67);
	cout<<s.pop()<<"Popped from Stack"<<endl;
    cout<<"Elements presents in Stack are:";
    while(!s.isEmpty())
    {
    	cout<<s.peek()<<" ";
    	s.pop();
    }
    return 0;
}
